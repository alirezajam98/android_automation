{"name": "test_close_onboarding_and_check_box_texts", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\a.jamshidi\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\a.jamshidi\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\n    at AndroidUiautomator2Driver.findElement (C:\\Users\\a.jamshidi\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)", "trace": "login_and_dashboard = <pages.dashboard.dashboard_page.DashboardPage object at 0x000001A678743C10>\ndevice_name = 'Galaxy A7'\n\n    @pytest.mark.order(1)\n    @pytest.mark.check_box\n    @allure.feature(\"Box Page\")\n    @allure.story(\"Close Onboarding and Check Box Texts\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_close_onboarding_and_check_box_texts(login_and_dashboard, device_name):\n        \"\"\"تست بسته شدن انبوردینگ و بررسی متن‌های صفحه باکس\"\"\"\n    \n        box_page = login_and_dashboard\n        driver = box_page.driver\n    \n        # بارگذاری فایل JSON برای دریافت متون مرجع\n        text_reference = load_text_reference()\n    \n        # متغیر برای ذخیره نتیجه تست\n        errors = []\n    \n        try:\n            with allure.step(f\"Click on box icon to open box page for device: {device_name}\"):\n                logger.info(f\"کلیک روی آیکون باکس برای باز کردن صفحه باکس: {device_name}\")\n                box_page = login_and_dashboard.click_box_icon()\n    \n            with allure.step(\"Close the onboarding page\"):\n                logger.info(\"بستن صفحه انبوردینگ...\")\n                box_page.close_onboarding()\n    \n            with allure.step(\"Check if the box page is displayed\"):\n                assert box_page.is_box_page_displayed(), \"صفحه باکس بعد از بستن انبوردینگ نمایش داده نشده است.\"\n                logger.info(\"بررسی نمایش صفحه باکس...\")\n    \n            # مقایسه مقادیر با متون مرجع از فایل JSON\n            with allure.step(\"Check '۰ ریال' text\"):\n                try:\n                    expected_text = text_reference[\"box_page\"][\"box_deposit_text\"]\n                    actual_text = box_page.get_box_deposit_text()  # تابعی که متن واقعی را برمی‌گرداند\n                    assert actual_text == expected_text, \\\n                        f\"Expected '{expected_text}', but got '{actual_text}'\"\n                    logger.info(f\"بررسی متن '{expected_text}' پاس شد.\")\n                except AssertionError as e:\n                    errors.append(f\"Error in box_deposit_text: {e}\")\n                    logger.error(str(e))\n    \n            with allure.step(\"Check 'موجودی باکس‌ها' text\"):\n                try:\n                    expected_text = text_reference[\"box_page\"][\"box_deposit_description\"]\n                    actual_text = box_page.get_box_deposit_description()  # تابعی که متن واقعی را برمی‌گرداند\n                    assert actual_text == expected_text, \\\n                        f\"Expected '{expected_text}', but got '{actual_text}'\"\n                    logger.info(f\"بررسی متن '{expected_text}' پاس شد.\")\n                except AssertionError as e:\n                    errors.append(f\"Error in box_deposit_description: {e}\")\n                    logger.error(str(e))\n    \n            with allure.step(\"Check 'باکس فعالی ندارید' text\"):\n                try:\n                    expected_text = text_reference[\"box_page\"][\"no_active_box_title\"]\n                    actual_text = box_page.get_no_active_box_title()  # تابعی که متن واقعی را برمی‌گرداند\n                    assert actual_text == expected_text, \\\n                        f\"Expected '{expected_text}', but got '{actual_text}'\"\n                    logger.info(f\"بررسی متن '{expected_text}' پاس شد.\")\n                except AssertionError as e:\n                    errors.append(f\"Error in no_active_box_title: {e}\")\n                    logger.error(str(e))\n    \n        except Exception as e:\n            logger.error(f\"خطا رخ داد: {e}\")\n            capture_screenshot(driver, \"box_page_error\")\n>           raise e\n\ntests\\box\\test_box.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\box\\test_box.py:38: in test_close_onboarding_and_check_box_texts\n    box_page.close_onboarding()\npages\\dashboard\\box\\box_page.py:21: in close_onboarding\n    WebDriverWait(self.driver, 20).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bad32a1b-89aa-4447-9df7-5e7afa0e5364\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001A6788698B0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\a.jamshidi\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\nE           at processTicksAndRejections (node:internal/process/task_queues:95:5)\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\a.jamshidi\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\nE           at AndroidUiautomator2Driver.findElement (C:\\Users\\a.jamshidi\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)\n\nC:\\Users\\a.jamshidi\\android_automation\\android_automation\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "تست بسته شدن انبوردینگ و بررسی متن‌های صفحه باکس", "steps": [{"name": "Click on box icon to open box page for device: Galaxy A7", "status": "passed", "start": 1728825475394, "stop": 1728825479502}, {"name": "Close the onboarding page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\a.jamshidi\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\a.jamshidi\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\n    at AndroidUiautomator2Driver.findElement (C:\\Users\\a.jamshidi\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)\n", "trace": "  File \"G:\\android_automation\\tests\\box\\test_box.py\", line 38, in test_close_onboarding_and_check_box_texts\n    box_page.close_onboarding()\n  File \"G:\\android_automation\\pages\\dashboard\\box\\box_page.py\", line 21, in close_onboarding\n    WebDriverWait(self.driver, 20).until(\n  File \"C:\\Users\\a.jamshidi\\android_automation\\android_automation\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1728825479502, "stop": 1728825499542}], "attachments": [{"name": "box_page_error_20241013_164819.png", "source": "5193a2b7-35ec-4955-8091-70544e6105ca-attachment.png", "type": "image/png"}, {"name": "log", "source": "a3d0ef46-7198-446e-9f09-872466b54127-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "8dda1aa3-b65e-434f-96e3-b20f1ba21012-attachment.txt", "type": "text/plain"}], "start": 1728825475394, "stop": 1728825500427, "uuid": "4ebb4afb-3ae1-4021-bd00-338fbae13f5c", "historyId": "372cec981dead8d05da0ba57aba1f8eb", "testCaseId": "372cec981dead8d05da0ba57aba1f8eb", "fullName": "tests.box.test_box#test_close_onboarding_and_check_box_texts", "labels": [{"name": "tag", "value": "check_box"}, {"name": "tag", "value": "order(1)"}, {"name": "parentSuite", "value": "tests.box"}, {"name": "suite", "value": "test_box"}, {"name": "host", "value": "ajamshidi-lap-qa"}, {"name": "thread", "value": "134380-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.box.test_box"}]}