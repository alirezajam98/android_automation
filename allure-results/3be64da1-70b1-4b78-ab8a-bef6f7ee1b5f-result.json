{"name": "test_kyc", "status": "broken", "statusDetails": {"message": "TypeError: until() missing 1 required positional argument: 'method'", "trace": "open_app_without_login = <appium.webdriver.webdriver.WebDriver (session=\"76acdd32-0db6-40dc-aa8a-59320e8af8fe\")>\n\n    @pytest.mark.order(1)\n    @allure.feature(\"User Account Creation\")\n    @allure.story(\"Create a new user account\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_kyc(open_app_without_login):\n        driver = open_app_without_login\n        accept_page = AcceptRulesAndRegulations(driver)\n    \n        try:\n            # بررسی دسترسی نوتیفیکیشن\n            notification_permission_page = NotificationPermissionPage(driver)\n            notification_permission_page.allow_notification_permission()\n            logger.info(\"Clicked on 'Allow' button for notification permission.\")\n    \n            # مرحله 1: کلیک روی دکمه 'ایجاد حساب کاربری'\n            try:\n                with allure.step(\"Click on 'Create Account' button\"):\n                    logger.info(\"کلیک روی دکمه 'ایجاد حساب کاربری'...\")\n                    create_account_button = WebDriverWait(driver, 10).until(\n                        EC.presence_of_element_located((AppiumBy.ID, \"com.samanpr.blu.dev:id/openButton\"))\n                    )\n                    create_account_button.click()\n                    logger.info(\"دکمه 'ایجاد حساب کاربری' کلیک شد.\")\n            except TimeoutException:\n                logger.info(\"No login page displayed, continuing.\")\n    \n            # مرحله 2: کلیک روی دکمه 'بازکردن حساب'\n            with allure.step(\"Click on 'Open Account' button\"):\n                logger.info(\"کلیک روی دکمه 'بازکردن حساب'...\")\n                open_account_page = OpenAccountPage(driver)\n                open_account_page.click_open_account()\n                logger.info(\"دکمه 'بازکردن حساب' کلیک شد.\")\n    \n            # مرحله 3: انتخاب UAT در سرور\n            with allure.step(\"click on 'UAT' from server selection\"):\n                logger.info(\"انتخاب سرور 'UAT'...\")\n                select_server_page = SelectServerPage(driver)\n                select_server_page.select_uat_server()\n                logger.info(\"سرور 'UAT' انتخاب شد.\")\n    \n            # مرحله 4: کلیک روی 'شروع'\n            with allure.step(\"Click on 'Start' button\"):\n                logger.info(\"کلیک روی دکمه 'شروع'...\")\n                create_account_info_page = CreateAccountInfoPage(driver)\n                create_account_info_page.click_start()\n                logger.info(\"دکمه 'شروع' کلیک شد.\")\n    \n    \n            # بررسی وضعیت اولیه سوییچ\n            with allure.step(\"Check initial state of the switch\"):\n                initial_status = accept_page.is_switch_on()\n                logger.info(f\"Initial switch status: {'ON' if initial_status else 'OFF'}\")\n                allure.attach(f\"Initial switch status: {'ON' if initial_status else 'OFF'}\", \"Switch Status\",\n                              allure.attachment_type.TEXT)\n    \n            # تغییر وضعیت سوییچ\n            with allure.step(\"Toggle the agreement switch\"):\n                logger.info(\"کلیک بر روی تاگل سوییچ موافقت با قوانین و مقررات ...\")\n                accept_page.toggle_switch()  # استفاده از متد toggle_switch\n                new_status = accept_page.is_switch_on()\n                logger.info(f\"Switch status after toggle: {'ON' if new_status else 'OFF'}\")\n                allure.attach(f\"New switch status: {'ON' if new_status else 'OFF'}\", \"Switch Status After Toggle\",\n                              allure.attachment_type.TEXT)\n    \n            # اطمینان از تغییر وضعیت\n            with allure.step(\"Verify the switch has toggled\"):\n                assert new_status != initial_status, \"Switch status should have toggled after click\"\n                logger.info(\"وضعیت تاگل سوییچ پس از کلیک تغییر کرده است\")\n    \n            # کلیک روی دکمه تایید بعد از تغییر وضعیت\n            with allure.step(\"Click confirm button after toggle\"):\n                logger.info(\"کلیک روی دکمه تایید...\")\n                accept_page.click_confirm_button()\n                logger.info(\"دکمه تایید کلیک شد و به صفحه بعدی هدایت شد.\")\n    \n            with allure.step(\"confirm\"):\n                logger.info(\"کلیک بر روی دکمه ادامه...\")\n                click_confirm_button = WebDriverWait(driver, 10).until()\n    \n        except Exception as e:\n            logger.error(f\"خطا رخ داد: {e}\")\n            capture_screenshot(driver, \"account_creation_error\")\n>           raise e\n\ntests\\kyc\\test_create_account.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nopen_app_without_login = <appium.webdriver.webdriver.WebDriver (session=\"76acdd32-0db6-40dc-aa8a-59320e8af8fe\")>\n\n    @pytest.mark.order(1)\n    @allure.feature(\"User Account Creation\")\n    @allure.story(\"Create a new user account\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_kyc(open_app_without_login):\n        driver = open_app_without_login\n        accept_page = AcceptRulesAndRegulations(driver)\n    \n        try:\n            # بررسی دسترسی نوتیفیکیشن\n            notification_permission_page = NotificationPermissionPage(driver)\n            notification_permission_page.allow_notification_permission()\n            logger.info(\"Clicked on 'Allow' button for notification permission.\")\n    \n            # مرحله 1: کلیک روی دکمه 'ایجاد حساب کاربری'\n            try:\n                with allure.step(\"Click on 'Create Account' button\"):\n                    logger.info(\"کلیک روی دکمه 'ایجاد حساب کاربری'...\")\n                    create_account_button = WebDriverWait(driver, 10).until(\n                        EC.presence_of_element_located((AppiumBy.ID, \"com.samanpr.blu.dev:id/openButton\"))\n                    )\n                    create_account_button.click()\n                    logger.info(\"دکمه 'ایجاد حساب کاربری' کلیک شد.\")\n            except TimeoutException:\n                logger.info(\"No login page displayed, continuing.\")\n    \n            # مرحله 2: کلیک روی دکمه 'بازکردن حساب'\n            with allure.step(\"Click on 'Open Account' button\"):\n                logger.info(\"کلیک روی دکمه 'بازکردن حساب'...\")\n                open_account_page = OpenAccountPage(driver)\n                open_account_page.click_open_account()\n                logger.info(\"دکمه 'بازکردن حساب' کلیک شد.\")\n    \n            # مرحله 3: انتخاب UAT در سرور\n            with allure.step(\"click on 'UAT' from server selection\"):\n                logger.info(\"انتخاب سرور 'UAT'...\")\n                select_server_page = SelectServerPage(driver)\n                select_server_page.select_uat_server()\n                logger.info(\"سرور 'UAT' انتخاب شد.\")\n    \n            # مرحله 4: کلیک روی 'شروع'\n            with allure.step(\"Click on 'Start' button\"):\n                logger.info(\"کلیک روی دکمه 'شروع'...\")\n                create_account_info_page = CreateAccountInfoPage(driver)\n                create_account_info_page.click_start()\n                logger.info(\"دکمه 'شروع' کلیک شد.\")\n    \n    \n            # بررسی وضعیت اولیه سوییچ\n            with allure.step(\"Check initial state of the switch\"):\n                initial_status = accept_page.is_switch_on()\n                logger.info(f\"Initial switch status: {'ON' if initial_status else 'OFF'}\")\n                allure.attach(f\"Initial switch status: {'ON' if initial_status else 'OFF'}\", \"Switch Status\",\n                              allure.attachment_type.TEXT)\n    \n            # تغییر وضعیت سوییچ\n            with allure.step(\"Toggle the agreement switch\"):\n                logger.info(\"کلیک بر روی تاگل سوییچ موافقت با قوانین و مقررات ...\")\n                accept_page.toggle_switch()  # استفاده از متد toggle_switch\n                new_status = accept_page.is_switch_on()\n                logger.info(f\"Switch status after toggle: {'ON' if new_status else 'OFF'}\")\n                allure.attach(f\"New switch status: {'ON' if new_status else 'OFF'}\", \"Switch Status After Toggle\",\n                              allure.attachment_type.TEXT)\n    \n            # اطمینان از تغییر وضعیت\n            with allure.step(\"Verify the switch has toggled\"):\n                assert new_status != initial_status, \"Switch status should have toggled after click\"\n                logger.info(\"وضعیت تاگل سوییچ پس از کلیک تغییر کرده است\")\n    \n            # کلیک روی دکمه تایید بعد از تغییر وضعیت\n            with allure.step(\"Click confirm button after toggle\"):\n                logger.info(\"کلیک روی دکمه تایید...\")\n                accept_page.click_confirm_button()\n                logger.info(\"دکمه تایید کلیک شد و به صفحه بعدی هدایت شد.\")\n    \n            with allure.step(\"confirm\"):\n                logger.info(\"کلیک بر روی دکمه ادامه...\")\n>               click_confirm_button = WebDriverWait(driver, 10).until()\nE               TypeError: until() missing 1 required positional argument: 'method'\n\ntests\\kyc\\test_create_account.py:94: TypeError"}, "steps": [{"name": "Click on 'Create Account' button", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nNoSuchElementError: An element could not be located on the page using the given search parameters.\n    at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\a.jamshidi\\.appium\\node_modules\\appium-uiautomator2-driver\\node_modules\\appium-android-driver\\lib\\commands\\find.ts:86:11)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\a.jamshidi\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:60:12)\n    at AndroidUiautomator2Driver.findElement (C:\\Users\\a.jamshidi\\AppData\\Roaming\\npm\\node_modules\\appium\\node_modules\\@appium\\base-driver\\lib\\basedriver\\commands\\find.ts:75:12)\n", "trace": "  File \"G:\\android_automation\\tests\\kyc\\test_create_account.py\", line 35, in test_kyc\n    create_account_button = WebDriverWait(driver, 10).until(\n  File \"C:\\Users\\a.jamshidi\\android_automation\\android_automation\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1729420693046, "stop": 1729420703571}, {"name": "Click on 'Open Account' button", "status": "passed", "start": 1729420703574, "stop": 1729420704908}, {"name": "click on 'UAT' from server selection", "status": "passed", "start": 1729420704908, "stop": 1729420705110}, {"name": "Click on 'Start' button", "status": "passed", "start": 1729420705110, "stop": 1729420706926}, {"name": "Check initial state of the switch", "status": "passed", "attachments": [{"name": "Switch Status", "source": "5eb99944-13e9-437d-b60e-be9855c2bb86-attachment.txt", "type": "text/plain"}], "start": 1729420706926, "stop": 1729420707118}, {"name": "Toggle the agreement switch", "status": "passed", "attachments": [{"name": "Switch Status After Toggle", "source": "55ae5997-2195-4850-b689-81f6d21393f6-attachment.txt", "type": "text/plain"}], "start": 1729420707118, "stop": 1729420708075}, {"name": "Verify the switch has toggled", "status": "passed", "start": 1729420708075, "stop": 1729420708075}, {"name": "Click confirm button after toggle", "status": "passed", "start": 1729420708075, "stop": 1729420709331}, {"name": "confirm", "status": "broken", "statusDetails": {"message": "TypeError: until() missing 1 required positional argument: 'method'\n", "trace": "  File \"G:\\android_automation\\tests\\kyc\\test_create_account.py\", line 94, in test_kyc\n    click_confirm_button = WebDriverWait(driver, 10).until()\n"}, "start": 1729420709331, "stop": 1729420709331}], "attachments": [{"name": "account_creation_error_20241020_140829.png", "source": "b4017898-7b46-4c42-aa92-cc0c40ceb5d1-attachment.png", "type": "image/png"}, {"name": "log", "source": "1d864cfb-c55c-45f8-b6ca-9a01e9a04030-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "cd249388-adf9-4056-bfc7-9ac4863aefd2-attachment.txt", "type": "text/plain"}], "start": 1729420692135, "stop": 1729420709734, "uuid": "8bccee72-adb7-41c3-8e1f-0464801e8d45", "historyId": "190b09abcd6c5ed17aef79066d090e97", "testCaseId": "190b09abcd6c5ed17aef79066d090e97", "fullName": "tests.kyc.test_create_account#test_kyc", "labels": [{"name": "story", "value": "Create a new user account"}, {"name": "feature", "value": "User Account Creation"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "order(1)"}, {"name": "parentSuite", "value": "tests.kyc"}, {"name": "suite", "value": "test_create_account"}, {"name": "host", "value": "ajamshidi-lap-qa"}, {"name": "thread", "value": "33008-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.kyc.test_create_account"}]}