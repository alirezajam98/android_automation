{"name": "test_kyc", "status": "broken", "statusDetails": {"message": "AttributeError: 'function' object has no attribute 'find_element'", "trace": "open_app_without_login = <appium.webdriver.webdriver.WebDriver (session=\"105e62c5-e740-42d5-8f9d-3c6babde7105\")>\n\n    @pytest.mark.order(1)\n    @allure.feature(\"User Account Creation\")\n    @allure.story(\"Create a new user account\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_kyc(open_app_without_login):\n        driver = open_app_without_login\n        accept_page = AcceptRulesAndRegulations(driver)\n        # بارگذاری فایل JSON برای دریافت متون مرجع\n        text_reference = load_text_reference()\n    \n        # متغیر برای ذخیره نتیجه تست\n        errors = []\n        try:\n            # بررسی دسترسی نوتیفیکیشن\n            notification_permission_page = NotificationPermissionPage(driver)\n            notification_permission_page.allow_notification_permission()\n            logger.info(\"Clicked on 'Allow' button for notification permission.\")\n    \n            # مرحله 1: کلیک روی دکمه 'ایجاد حساب کاربری'\n            try:\n                with allure.step(\"Click on 'Create Account' button\"):\n                    logger.info(\"کلیک روی دکمه 'ایجاد حساب کاربری'...\")\n                    create_account_button = WebDriverWait(driver, 10).until(\n                        EC.presence_of_element_located((AppiumBy.ID, \"com.samanpr.blu.dev:id/openButton\"))\n                    )\n                    create_account_button.click()\n                    logger.info(\"دکمه 'ایجاد حساب کاربری' کلیک شد.\")\n            except TimeoutException:\n                logger.info(\"No login page displayed, continuing.\")\n            try:\n                notification_permission_page = NotificationPermissionPage(driver)\n                notification_permission_page.allow_notification_permission()\n                logger.info(\"Clicked on 'Allow' button for notification permission.\")\n            except TimeoutException:\n                logger.info(\"No notification permission modal displayed, continuing.\")\n            # مرحله 2: کلیک روی دکمه 'بازکردن حساب'\n            with allure.step(\"Click on 'Open Account' button\"):\n                logger.info(\"کلیک روی دکمه 'بازکردن حساب'...\")\n                open_account_page = OpenAccountPage(driver)\n                open_account_page.click_open_account()\n                logger.info(\"دکمه 'بازکردن حساب' کلیک شد.\")\n    \n            # مرحله 3: انتخاب UAT در سرور\n            with allure.step(\"click on 'UAT' from server selection\"):\n                logger.info(\"انتخاب سرور 'UAT'...\")\n                select_server_page = SelectServerPage(driver)\n                select_server_page.select_uat_server()\n                logger.info(\"سرور 'UAT' انتخاب شد.\")\n    \n            # مرحله 4: کلیک روی 'شروع'\n            with allure.step(\"Click on 'Start' button\"):\n                logger.info(\"کلیک روی دکمه 'شروع'...\")\n                create_account_info_page = CreateAccountInfoPage(driver)\n                create_account_info_page.click_start()\n                logger.info(\"دکمه 'شروع' کلیک شد.\")\n    \n            # بررسی وضعیت اولیه سوییچ\n            with allure.step(\"Check initial state of the switch\"):\n                initial_status = accept_page.is_switch_on()\n                logger.info(f\"Initial switch status: {'ON' if initial_status else 'OFF'}\")\n                allure.attach(f\"Initial switch status: {'ON' if initial_status else 'OFF'}\", \"Switch Status\",\n                              allure.attachment_type.TEXT)\n    \n            # تغییر وضعیت سوییچ\n            with allure.step(\"Toggle the agreement switch\"):\n                logger.info(\"کلیک بر روی تاگل سوییچ موافقت با قوانین و مقررات ...\")\n                accept_page.toggle_switch()  # استفاده از متد toggle_switch\n                new_status = accept_page.is_switch_on()\n                logger.info(f\"Switch status after toggle: {'ON' if new_status else 'OFF'}\")\n                allure.attach(f\"New switch status: {'ON' if new_status else 'OFF'}\", \"Switch Status After Toggle\",\n                              allure.attachment_type.TEXT)\n    \n            # کلیک روی دکمه تایید بعد از تغییر وضعیت\n            with allure.step(\"Click confirm button after toggle\"):\n                logger.info(\"کلیک روی دکمه تایید...\")\n                accept_page.click_confirm_button()\n                logger.info(\"دکمه تایید کلیک شد و به صفحه وارد کردن شماره تلفن هدایت شد.\")\n            # مرحله 2: وارد کردن شماره تلفن\n            with allure.step(\"Enter phone number\"):\n                logger.info(\"ورود شماره تلفن ...\")\n                # فراخوانی تابع mobile_number_generator برای تولید شماره موبایل\n                phone_number = mobile_number_generator()\n                phone_page = EnterPhoneNumberPage(driver)\n                phone_page.enter_phone_number(phone_number)\n    \n            logger.info(f\"شماره تلفن وارد شد: {phone_number}\")\n    \n            # مرحله 3: کلیک روی دکمه \"بعدی\"\n            with allure.step(\"Click next button\"):\n                logger.info(\"کلیک روی دکمه 'بعدی'...\")\n                phone_page.click_next_button()\n                logger.info(\"دکمه 'بعدی' کلیک شد.\")\n    \n            with allure.step(\"Check 'مانند:‌ MDMGKP' text\"):\n                logger.info(\"بررسی متن ریفرال...\")\n                expected_text = text_reference[\"kyc_pages\"][\"referralInputEditText\"]\n    \n                # استفاده از شیء درست برای فراخوانی متد\n                referral_page = ReferralPage(driver)\n                actual_text = referral_page.get_referral_field_text()  # به درستی شیء ReferralPage استفاده می‌شود\n    \n                assert actual_text == expected_text, \\\n                    f\"Expected '{expected_text}', but got '{actual_text}'\"\n                logger.info(f\"متن ریفرال صحیح است: {actual_text}\")\n    \n            with (allure.step(\"Click next button\")):\n                logger.info(\"کلیک روی دکمه 'بعدی'...\")\n                referral_page = ReferralPage(driver)\n                referral_page.click_next_button()\n                logger.info(\"دکمه 'بعدی' کلیک شد.\")\n    \n            # بررسی متن کد ملی\n            with allure.step(\"Check 'کد ملی ۱۰ رقمی' text\"):\n                logger.info(\"بررسی متن کد ملی...\")\n                expected_text = text_reference[\"kyc_pages\"][\"national_code\"]\n    \n                # استفاده از شیء درست برای فراخوانی متد\n                national_page = NationalCodePage(driver)\n                actual_text = national_page.get_national_code_text()  # به درستی شیء national_page استفاده می‌شود\n    \n                assert actual_text == expected_text, \\\n                    f\"Expected '{expected_text}', but got '{actual_text}'\"\n                logger.info(f\"متن کد ملی صحیح است: {actual_text}\")\n    \n            with allure.step(\"Enter national code\"):\n                logger.info(\"ورود کد ملی ...\")\n    \n                try:\n                    # فراخوانی تابع national_code_generator برای تولید کد ملی\n                    national_code = national_code_generator()\n                    national_code_page = NationalCodePage(driver)\n    \n                    # افزایش زمان انتظار به 20 ثانیه\n                    national_code_page.enter_national_code(national_code)\n                    logger.info(f\"کدملی وارد شد: {national_code}\")\n    \n                except TimeoutException as e:\n                    logger.error(f\"خطا در پیدا کردن فیلد کد ملی: {e}\")\n                    capture_screenshot(driver, \"national_code_error\")\n                    raise e\n    \n            # مرحله 3: کلیک روی دکمه \"بعدی\"\n            with allure.step(\"Click next button\"):\n                logger.info(\"کلیک روی دکمه 'بعدی'...\")\n                national_page.click_next_button()\n                logger.info(\"دکمه 'بعدی' کلیک شد.\")\n    \n            with allure.step(\"Scroll year field\"):\n                birth_date_page = BirthDatePage(driver)\n                birth_date_page.scroll_year()  # اسکرول کردن سال\n                logger.info(\"سال با موفقیت اسکرول شد.\")\n    \n            with allure.step(\"Click next button\"):\n                logger.info(\"کلیک روی دکمه 'بعدی'...\")\n                birth_date_page.click_next_button()\n                logger.info(\"دکمه 'بعدی' کلیک شد.\")\n    \n            with allure.step(\"write new username\"):\n                logger.info(\"وارد کردن نام کاربری ...\")\n                try:\n                    # فراخوانی تابع username_generator برای تولید کد ملی\n                    username = username_generator()\n                    username_page = UserNamePage(driver)\n                    username_page.enter_username(username)\n                    logger.info(f\"نام کاربری وارد شد: {username}\")\n    \n                except TimeoutException as e:\n                    logger.error(f\"خطا در پیدا کردن فیلد نام کاربری: {e}\")\n                    capture_screenshot(driver, \"username_field_error\")\n                    raise e\n    \n            with allure.step(\"Click next button\"):\n                logger.info(\"کلیک روی دکمه 'بعدی'...\")\n                username_page.click_next_button()\n                logger.info(\"دکمه 'بعدی' کلیک شد.\")\n    \n            with allure.step(\"Enter password\"):\n                logger.info(\"وارد کردن رمز عبور\")\n                password_page = PasswordPage(driver)\n                password_page.enter_password(\"Aa123456\")\n                logger.info(\"رمز عبور وارد شد.\")\n    \n            with allure.step(\"Click next button\"):\n                logger.info(\"کلیک روی دکمه 'بعدی'...\")\n                password_page.click_next_button()\n                logger.info(\"دکمه 'بعدی' کلیک شد.\")\n    \n            with allure.step(\"Click next button\"):\n                logger.info(\"کلیک روی دکمه 'ادامه'...\")\n                create_account_in_blu_state_page = CreateAccountInBluStatePage(driver)\n                create_account_in_blu_state_page.click_confirm_button()\n                logger.info(\"دکمه 'ادامه' کلیک شد.\")\n    \n            with allure.step(\"select national card button\"):\n                logger.info(\"کلیک روی دکمه 'ساخت اکانت با کارت ملی'...\")\n                select_national_card = SelectNationalCardOrTrackerIdPage(driver)\n                select_national_card.click_select_national_card()\n                logger.info(\"دکمه 'ساخت اکانت با کارت ملی' کلیک شد.\")\n    \n            try:\n                camera_permission_page = NotificationPermissionPage(driver)\n                camera_permission_page.allow_camera_permission()\n                logger.info(\"Clicked on 'Allow' button for camera permission.\")\n            except TimeoutException:\n                logger.info(\"No notification permission modal displayed, continuing.\")\n    \n            with allure.step(\"Take photo from front of nationalcard\"):\n                logger.info(\"کلیک بر روی دکمه شاتر برای 'عکس جلوی کارت ملی'...\")\n                take_photo_page = TakePhotoPage(driver)\n                take_photo_page.click_take_photo()\n                logger.info(\"دکمه شاتر برای عکس برداری کلیک شد.\")\n    \n            with allure.step(\"Click confirm button\"):\n                logger.info(\"کلیک روی دکمه تایید...\")\n                confirm_photo_page = ConfirmPhotoPage(driver)\n                confirm_photo_page.click_confirm_photo()\n                logger.info(\"دکمه تایید کلیک شد.\")\n    \n            with allure.step(\"Click confirm button\"):\n                logger.info(\"کلیک روی دکمه تایید...\")\n                confirm_photo_modal = ConfirmPhotoModal(driver)\n                confirm_photo_modal.click_confirm_photo()\n                logger.info(\"دکمه تایید کلیک شد.\")\n    \n            with allure.step(\"Take photo from back of nationalcard\"):\n                logger.info(\"کلیک بر روی دکمه شاتر برای 'عکس پشت کارت ملی'...\")\n                take_photo_page = TakePhotoPage(driver)\n                take_photo_page.click_take_photo()\n                logger.info(\"دکمه شاتر برای عکس برداری کلیک شد.\")\n    \n    \n            with allure.step(\"Click confirm button for back card\"):\n                logger.info(\"کلیک روی دکمه تایید...\")\n                confirm_photo_page = ConfirmPhotoPage(driver)\n                confirm_photo_page.click_confirm_photo()\n                logger.info(\"دکمه تایید کلیک شد.\")\n    \n            with allure.step(\"Click confirm button\"):\n                logger.info(\"کلیک روی دکمه تایید...\")\n                confirm_photo_modal = ConfirmPhotoModal(driver)\n                confirm_photo_modal.click_confirm_photo()\n                logger.info(\"دکمه تایید کلیک شد.\")\n    \n    \n            with allure.step(\"Click next button\"):\n                logger.info(\"کلیک روی دکمه 'ادامه'...\")\n                create_account_in_blu_state_page = CreateAccountInBluStatePage(driver)\n                create_account_in_blu_state_page.click_confirm_button()\n                logger.info(\"دکمه 'ادامه' کلیک شد.\")\n    \n            with allure.step(\"Select job for user\"):\n                logger.info(\"کلیک بر روی اولین شغل\")\n                select_job_page = SelectJobPage(driver)\n                select_job_page.select_job()\n                logger.info(\"اولین شغل از لیست انتخاب شد.\")\n                logger.info(\"کلیک روی دکمه تایید...\")\n                select_job_page.click_confirm_job()\n                logger.info(\"دکمه 'ادامه' کلیک شد.\")\n    \n            with allure.step(\"show and skip demo video\"):\n                logger.info(\"ویدیو آموزشی نحوه ارسال ویدیو در حال پخش است...\")\n                video_demo_page = VideoDemoPage(driver)\n                video_demo_page.click_confirm_video_demo()\n                logger.info(\"دکمه 'ادامه' کلیک شد.\")\n    \n            try:\n                camera_permission_page = NotificationPermissionPage(driver)\n                camera_permission_page.allow_camera_permission()\n                logger.info(\"Clicked on 'Allow' button for camera permission.\")\n            except TimeoutException:\n                logger.info(\"No notification permission modal displayed, continuing.\")\n    \n            with allure.step(\"record video\"):\n                logger.info(\"کلیک روی دکمه ریکورد ویدیو\")\n                video_record_page = VideoRecordingPage(driver)\n                video_record_page.click_video_recording()\n                logger.info(\"ویدیو در حال ضبط شدن است...\")\n                sleep(10)\n                video_record_page.click_stop_recording_button()\n                logger.info(\"توقف ضبط ویدیو.\")\n                logger.info(\"کلیک روی آپلود ویدیو\")\n                video_record_page.click_upload_video()\n                logger.info(\"ویدیو در حال آپلود است...\")\n                confirm_video_modal = ConfirmVideoModal(driver)\n                confirm_video_modal.click_confirm_video()\n                logger.info(\"کلیک روی تایید آپلود ویدیو\")\n                final_page = FinalPage(driver)\n                final_page.click_final_confirm()\n                logger.info(\"مراحل ایجاد حساب کاربری با موفقیت به پایان رسید\")\n    \n        except Exception as e:\n    \n            logger.error(f\"خطا رخ داد: {e}\")\n            capture_screenshot(driver, \"account_creation_error\")\n>           raise e\n\ntests\\kyc\\test_create_account.py:324: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntests\\kyc\\test_create_account.py:292: in test_kyc\n    video_demo_page.click_confirm_video_demo()\npages\\kyc\\kyc_pages.py:302: in click_confirm_video_demo\n    WebDriverWait(driver, 30).until(\nC:\\Users\\a.jamshidi\\android_automation\\android_automation\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:96: in until\n    value = method(self._driver)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndriver = <function driver at 0x00000210791035E0>\n\n>       lambda driver: driver.find_element(*button_locator).is_enabled()\n    )\nE   AttributeError: 'function' object has no attribute 'find_element'\n\npages\\kyc\\kyc_pages.py:303: AttributeError"}, "steps": [{"name": "Click on 'Create Account' button", "status": "passed", "start": 1729599607632, "stop": 1729599608490}, {"name": "Click on 'Open Account' button", "status": "passed", "start": 1729599608561, "stop": 1729599610261}, {"name": "click on 'UAT' from server selection", "status": "passed", "start": 1729599610261, "stop": 1729599610452}, {"name": "Click on 'Start' button", "status": "passed", "start": 1729599610452, "stop": 1729599612281}, {"name": "Check initial state of the switch", "status": "passed", "attachments": [{"name": "Switch Status", "source": "ff17ed51-86e4-4290-a690-f2f83270bdd9-attachment.txt", "type": "text/plain"}], "start": 1729599612281, "stop": 1729599612351}, {"name": "Toggle the agreement switch", "status": "passed", "attachments": [{"name": "Switch Status After Toggle", "source": "e4a33b3a-3461-44fe-9ecd-113b24a83f4f-attachment.txt", "type": "text/plain"}], "start": 1729599612351, "stop": 1729599613124}, {"name": "Click confirm button after toggle", "status": "passed", "start": 1729599613124, "stop": 1729599614317}, {"name": "Enter phone number", "status": "passed", "start": 1729599614317, "stop": 1729599615072}, {"name": "Click next button", "status": "passed", "start": 1729599615072, "stop": 1729599617962}, {"name": "Check 'مانند:‌ MDMGKP' text", "status": "passed", "start": 1729599617962, "stop": 1729599618073}, {"name": "Click next button", "status": "passed", "start": 1729599618073, "stop": 1729599618144}, {"name": "Check 'کد ملی ۱۰ رقمی' text", "status": "passed", "start": 1729599618144, "stop": 1729599619351}, {"name": "Enter national code", "status": "passed", "start": 1729599619351, "stop": 1729599620151}, {"name": "Click next button", "status": "passed", "start": 1729599620151, "stop": 1729599622082}, {"name": "Scroll year field", "status": "passed", "start": 1729599622082, "stop": 1729599622672}, {"name": "Click next button", "status": "passed", "start": 1729599622672, "stop": 1729599625175}, {"name": "write new username", "status": "passed", "start": 1729599625175, "stop": 1729599626670}, {"name": "Click next button", "status": "passed", "start": 1729599626670, "stop": 1729599628098}, {"name": "Enter password", "status": "passed", "start": 1729599628098, "stop": 1729599629561}, {"name": "Click next button", "status": "passed", "start": 1729599629561, "stop": 1729599630377}, {"name": "Click next button", "status": "passed", "start": 1729599630377, "stop": 1729599632373}, {"name": "select national card button", "status": "passed", "start": 1729599632373, "stop": 1729599633457}, {"name": "Take photo from front of nationalcard", "status": "passed", "start": 1729599633534, "stop": 1729599664801}, {"name": "Click confirm button", "status": "passed", "start": 1729599664801, "stop": 1729599667017}, {"name": "Click confirm button", "status": "passed", "start": 1729599667017, "stop": 1729599667902}, {"name": "Take photo from back of nationalcard", "status": "passed", "start": 1729599667902, "stop": 1729599699504}, {"name": "Click confirm button for back card", "status": "passed", "start": 1729599699504, "stop": 1729599701823}, {"name": "Click confirm button", "status": "passed", "start": 1729599701823, "stop": 1729599703090}, {"name": "Click next button", "status": "passed", "start": 1729599703090, "stop": 1729599703902}, {"name": "Select job for user", "status": "passed", "start": 1729599703902, "stop": 1729599705905}, {"name": "show and skip demo video", "status": "broken", "statusDetails": {"message": "AttributeError: 'function' object has no attribute 'find_element'\n", "trace": "  File \"G:\\android_automation\\tests\\kyc\\test_create_account.py\", line 292, in test_kyc\n    video_demo_page.click_confirm_video_demo()\n  File \"G:\\android_automation\\pages\\kyc\\kyc_pages.py\", line 302, in click_confirm_video_demo\n    WebDriverWait(driver, 30).until(\n  File \"C:\\Users\\a.jamshidi\\android_automation\\android_automation\\.venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 96, in until\n    value = method(self._driver)\n  File \"G:\\android_automation\\pages\\kyc\\kyc_pages.py\", line 303, in <lambda>\n    lambda driver: driver.find_element(*button_locator).is_enabled()\n"}, "start": 1729599705905, "stop": 1729599705905}], "attachments": [{"name": "account_creation_error_20241022_155145.png", "source": "be4a2e7a-22fc-4656-b96e-9af0b854d4cb-attachment.png", "type": "image/png"}, {"name": "log", "source": "bfe70946-9cc9-4b2f-8c3f-0e2f4210342d-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "b8b3f2c9-03e2-4aca-b2aa-4aae389936e9-attachment.txt", "type": "text/plain"}], "start": 1729599602333, "stop": 1729599707296, "uuid": "ab38ba1f-031b-4e13-81f1-19e0ed863785", "historyId": "190b09abcd6c5ed17aef79066d090e97", "testCaseId": "190b09abcd6c5ed17aef79066d090e97", "fullName": "tests.kyc.test_create_account#test_kyc", "labels": [{"name": "feature", "value": "User Account Creation"}, {"name": "story", "value": "Create a new user account"}, {"name": "severity", "value": "critical"}, {"name": "tag", "value": "order(1)"}, {"name": "parentSuite", "value": "tests.kyc"}, {"name": "suite", "value": "test_create_account"}, {"name": "host", "value": "ajamshidi-lap-qa"}, {"name": "thread", "value": "62320-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.kyc.test_create_account"}]}